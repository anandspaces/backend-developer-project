services:
  backend:
    build: .
    ports:
      - "3000:3000"
    environment:
      - JWT_SECRET=714b8653de49655fbb72f663f14b44ee82d9d4b0a5ff886c42e28be0c8e54e91248fa90c893da0014f7bc7dd0aa1a3787383eccfb09ab269d7b8816d9e449a30
      - RABBITMQ_URL=amqp://rabbitmq
      - POSTGRES_USER=anand
      - POSTGRES_PASSWORD=anand
      - POSTGRES_DB=queuedb
      - POSTGRES_HOST=postgres
    depends_on:
      - rabbitmq
      - postgres
    # Add a health check to ensure backend starts after rabbitmq and postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: anand
      POSTGRES_PASSWORD: anand
      POSTGRES_DB: queuedb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "anand", "-d", "queuedb"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
